{"version":3,"sources":["components/TopBar.js","components/SeasonSideBar.js","components/SideDrawer.js","components/ModalContainer.js","modals/SeasonSettingsModal.js","modals/AddPlayModal.js","modals/EditPlayModal.js","pages/SeasonViewPage.js","components/FreeToCast.js","components/Deadlocks.js","components/Sharing.js","pages/CastingMeetingPage.js","components/SnackBarHolder.js","modals/NewSeasonModal.js","pages/SeasonsPage.js","pages/SettingsPage.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","appBar","zIndex","drawer","marginBottom","spacing","titleHolder","color","palette","primary","contrastText","flexGrow","title","marginLeft","icon","classes","AppBar","position","className","Toolbar","IconButton","disableRipple","Typography","variant","Tooltip","sidebarTitle","formControl","marginTop","useState","castingOpen","setCastingOpen","Button","tallerButton","fullWidth","onClick","startIcon","component","Link","to","width","flexShrink","drawerPaper","drawerContainer","overflow","divideCenter","marginRight","sidebarContent","margin","location","useLocation","Drawer","paper","List","ListItem","button","ListItemIcon","ListItemText","Divider","pathname","modal","outline","left","transform","modalContent","minWidth","padding","modalTitle","borderBottom","borderBottomColor","main","modalTitleText","flex","display","isOpen","toggleModal","props","Modal","open","onClose","Paper","children","modalOpen","toggleModalOpen","playType","setPlayType","week","setWeek","TextField","label","FormControl","InputLabel","Select","value","onChange","e","target","MenuItem","disabled","_","times","i","seasonList","playItem","addPlayButton","typeChip","seasonSettingsModal","setSeasonSettingsModal","newPlayModal","setNewPlayModal","editPlayModal","setEditPlayModal","ListItemSecondaryAction","ho","style","Chip","size","personToCast","dense","secondary","Alert","elevation","snackbarStyling","snackBar","setSnackBar","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","divider","seasonOptions","FormGroup","FormControlLabel","control","Checkbox","checked","name","newSeasonModal","setNewSeasonModal","SettingsPage","root","content","createMuiTheme","shadows","light","dark","overrides","MuiCssBaseline","body","backgroundColor","CssBaseline","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5f2d861b.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  withStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Tooltip,\n} from \"@material-ui/core\";\nimport EmojiPeopleIcon from \"@material-ui/icons/EmojiPeople\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\n\nconst styles = (theme) => ({\n  appBar: { zIndex: theme.zIndex.drawer + 1, marginBottom: theme.spacing(3) },\n  titleHolder: {\n    color: theme.palette.primary.contrastText,\n    flexGrow: 1,\n  },\n  title: {\n    marginLeft: theme.spacing(),\n  },\n  icon: {\n    color: theme.palette.primary.contrastText,\n  },\n});\n\nconst TopBar = ({ classes, ...props }) => {\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <div className={classes.titleHolder}>\n          <IconButton className={classes.icon} disableRipple>\n            <EmojiPeopleIcon />\n            <Typography variant=\"h6\" className={classes.title}>\n              Casting Bot\n            </Typography>\n          </IconButton>\n        </div>\n\n        <Tooltip title=\"About\">\n          <IconButton className={classes.icon}>\n            <InfoIcon />\n          </IconButton>\n        </Tooltip>\n\n        <Tooltip title=\"Logout\">\n          <IconButton className={classes.icon}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default withStyles(styles)(TopBar);\n","import React, { useState } from \"react\";\nimport { Button, Typography, withStyles } from \"@material-ui/core\";\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\nimport NoMeetingRoomIcon from \"@material-ui/icons/NoMeetingRoom\";\nimport { Link } from \"react-router-dom\";\nconst styles = (theme) => ({\n  sidebarTitle: {\n    marginBottom: theme.spacing(),\n  },\n  formControl: {\n    marginTop: theme.spacing(),\n  },\n});\nconst SeasonSideBar = ({ classes, ...props }) => {\n  const [castingOpen, setCastingOpen] = useState(false);\n  return (\n    <div>\n      <Button\n        className={classes.tallerButton}\n        fullWidth\n        variant=\"contained\"\n        color={castingOpen ? \"secondary\" : \"primary\"}\n        onClick={() => setCastingOpen(!castingOpen)}\n        startIcon={castingOpen ? <MeetingRoomIcon /> : <NoMeetingRoomIcon />}\n      >\n        CASTING {castingOpen ? \"IS OPEN \" : \"CLOSED \"}\n      </Button>\n      <Button\n        className={classes.formControl}\n        variant=\"contained\"\n        fullWidth\n        component={Link}\n        to=\"/casting/1\"\n      >\n        Casting Meeting\n      </Button>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SeasonSideBar);\n","import React from \"react\";\nimport {\n  withStyles,\n  Drawer,\n  Typography,\n  List,\n  ListItem,\n  Toolbar,\n  ListItemText,\n  ListItemIcon,\n  Divider,\n} from \"@material-ui/core\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport SeasonSideBar from \"./SeasonSideBar\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport EmojiPeopleIcon from \"@material-ui/icons/EmojiPeople\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  divideCenter: {\n    marginLeft: theme.spacing(),\n    marginRight: theme.spacing(),\n  },\n  sidebarContent: {\n    margin: theme.spacing(2),\n  },\n});\n\nconst SideDrawer = ({ classes, ...props }) => {\n  const location = useLocation();\n  const seasonsCheck = \"seasons/d\";\n  return (\n    <div>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <List>\n            <ListItem button to=\"/seasons\" component={Link}>\n              <ListItemIcon>\n                <AccountBalanceIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Seasons\" />\n            </ListItem>\n            <ListItem button to=\"/people\" component={Link}>\n              <ListItemIcon>\n                <EmojiPeopleIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"People\" />\n            </ListItem>\n            <ListItem button to=\"/settings\" component={Link}>\n              <ListItemIcon>\n                <SettingsIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Settings\" />\n            </ListItem>\n          </List>\n        </div>\n        <Divider className={classes.divideCenter} />\n        <div className={classes.sidebarContent}>\n          {location.pathname == \"/seasons/1\" && <SeasonSideBar />}\n        </div>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SideDrawer);\n","import React from \"react\";\nimport {\n  withStyles,\n  Modal,\n  Paper,\n  Toolbar,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nconst styles = (theme) => ({\n  modal: {\n    outline: \"none\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translate(-50%, 0%) !important\",\n  },\n  modalContent: {\n    marginTop: theme.spacing(2),\n    minWidth: 600,\n    padding: theme.spacing(2),\n  },\n  modalTitle: {\n    borderBottom: \"2px solid\",\n    borderBottomColor: theme.palette.primary.main,\n    marginBottom: theme.spacing(2),\n  },\n  modalTitleText: {\n    flex: 1,\n    display: \"inline-block\",\n  },\n});\n\nconst ModalContainer = ({\n  classes,\n  isOpen,\n  toggleModal,\n  modalTitle,\n  ...props\n}) => {\n  return (\n    <>\n      <div>\n        <Modal open={isOpen} onClose={() => toggleModal()}>\n          <div className={classes.modal}>\n            <Toolbar />\n            <Paper className={classes.modalContent}>\n              <div className={classes.modalTitle}>\n                <div className={classes.modalTitleText}>\n                  <Typography variant=\"h6\">{modalTitle}</Typography>\n                </div>\n              </div>\n\n              {props.children}\n            </Paper>\n          </div>\n        </Modal>\n      </div>\n    </>\n  );\n};\n\nexport default withStyles(styles)(ModalContainer);\n","import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport ModalContainer from \"../components/ModalContainer\";\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\nimport NoMeetingRoomIcon from \"@material-ui/icons/NoMeetingRoom\";\nimport { Button } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst styles = (theme) => ({\n  tallerButton: { padding: theme.spacing(2), marginBottom: theme.spacing(2) },\n});\n\nconst SeasonSettingsModal = ({ classes, ...props }) => {\n  const [castingOpen, setCastingOpen] = useState(false);\n\n  return (\n    <div>\n      <ModalContainer\n        isOpen={props.modalOpen}\n        toggleModal={props.toggleModalOpen}\n        modalTitle={\"Season Settings\"}\n      >\n        <Button\n          className={classes.tallerButton}\n          fullWidth\n          variant=\"contained\"\n          color={\"primary\"}\n          startIcon={<DeleteIcon />}\n        >\n          DELETE SEASON\n        </Button>\n      </ModalContainer>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SeasonSettingsModal);\n","import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport {\n  withStyles,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Button,\n} from \"@material-ui/core\";\nimport ModalContainer from \"../components/ModalContainer\";\n\nconst styles = (theme) => ({\n  formControl: {\n    marginTop: theme.spacing(2),\n  },\n});\n\nconst AddPlayModal = ({ classes, ...props }) => {\n  const [playType, setPlayType] = useState(null);\n  const [week, setWeek] = useState(null);\n  return (\n    <div>\n      <ModalContainer\n        isOpen={props.modalOpen}\n        toggleModal={props.toggleModalOpen}\n        modalTitle=\"Add new play\"\n      >\n        <div>\n          <TextField variant=\"outlined\" fullWidth label=\"Play Title\" />\n          <FormControl\n            fullWidth\n            className={classes.formControl}\n            variant=\"outlined\"\n          >\n            <InputLabel>Type</InputLabel>\n            <Select\n              value={playType}\n              onChange={(e) => setPlayType(e.target.value)}\n              label=\"Type\"\n            >\n              <MenuItem value={\"Weekend\"}>Weekend</MenuItem>\n              <MenuItem value={\"ODN\"}>ODN</MenuItem>\n              <MenuItem value={\"special\"}>Special</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl\n            fullWidth\n            className={classes.formControl}\n            variant=\"outlined\"\n          >\n            <InputLabel>Week</InputLabel>\n            <Select\n              disabled={playType === \"special\"}\n              value={week}\n              onChange={(e) => setWeek(e.target.value)}\n              label=\"Week\"\n            >\n              {_.times(9, (i) => {\n                return <MenuItem value={i + 1}>{`Week ${i + 1}`}</MenuItem>;\n              })}\n            </Select>\n          </FormControl>\n          <TextField\n            className={classes.formControl}\n            variant=\"outlined\"\n            fullWidth\n            label=\"Producer Email\"\n          />\n          <Button\n            className={classes.formControl}\n            color=\"secondary\"\n            variant=\"contained\"\n            fullWidth\n          >\n            Add Play\n          </Button>\n        </div>\n      </ModalContainer>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(AddPlayModal);\n","import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport {\n  withStyles,\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Button,\n} from \"@material-ui/core\";\nimport ModalContainer from \"../components/ModalContainer\";\n\nconst styles = (theme) => ({\n  formControl: {\n    marginTop: theme.spacing(2),\n  },\n});\n\nconst EditPlayModal = ({ classes, ...props }) => {\n  const [playType, setPlayType] = useState(null);\n  const [week, setWeek] = useState(null);\n  return (\n    <div>\n      <ModalContainer\n        isOpen={props.modalOpen}\n        toggleModal={props.toggleModalOpen}\n        modalTitle=\"The Drunks\"\n      >\n        <div>\n          <TextField variant=\"outlined\" fullWidth label=\"Producer Email\" />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.formControl}\n          >\n            Resend login\n          </Button>\n          <Button\n            className={classes.formControl}\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n          >\n            Delete\n          </Button>\n        </div>\n      </ModalContainer>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(EditPlayModal);\n","import React, { useState } from \"react\";\nimport {\n  withStyles,\n  Typography,\n  Paper,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Divider,\n  Button,\n  Chip,\n} from \"@material-ui/core\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport SeasonSettingsModal from \"../modals/SeasonSettingsModal\";\nimport AddPlayModal from \"../modals/AddPlayModal\";\nimport EditPlayModal from \"../modals/EditPlayModal\";\n\nconst styles = (theme) => ({\n  seasonList: { marginTop: theme.spacing() },\n  playItem: {\n    marginBottom: theme.spacing(),\n  },\n  addPlayButton: {\n    marginRight: theme.spacing(),\n  },\n  typeChip: {\n    marginLeft: theme.spacing(),\n  },\n});\n\nconst SeasonViewPage = ({ classes, ...props }) => {\n  const [seasonSettingsModal, setSeasonSettingsModal] = useState(false);\n  const [newPlayModal, setNewPlayModal] = useState(false);\n  const [editPlayModal, setEditPlayModal] = useState(false);\n  return (\n    <div>\n      <List>\n        <ListItem>\n          <ListItemText\n            primary={<Typography variant=\"h6\">Season Title</Typography>}\n          />\n          <ListItemSecondaryAction>\n            <Button\n              className={classes.addPlayButton}\n              color=\"secondary\"\n              variant=\"contained\"\n              startIcon={<AddCircleIcon />}\n              onClick={() => setNewPlayModal(true)}\n            >\n              Add PLAY\n            </Button>\n            <Button\n              color=\"secondary\"\n              onClick={() => setSeasonSettingsModal(true)}\n              variant=\"contained\"\n              startIcon={<SettingsIcon />}\n            >\n              SEASON SETTINGS\n            </Button>\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n\n      <List className={classes.seasonList}>\n        <Paper>\n          <ListItem ho className={classes.playItem}>\n            <ListItemText\n              primary={\n                <div>\n                  <Typography style={{ display: \"inline-block\" }}>\n                    <strong>Week 2:</strong> The Drunks\n                  </Typography>\n                  <Chip className={classes.typeChip} size=\"small\" label=\"ODN\" />\n                </div>\n              }\n            />\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => setEditPlayModal(true)}>\n                <SettingsIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </Paper>\n        <Paper>\n          <ListItem className={classes.playItem}>\n            <ListItemText primary=\"The Drunks\" />\n            <ListItemSecondaryAction>\n              <IconButton>\n                <SettingsIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </Paper>\n      </List>\n      <SeasonSettingsModal\n        modalOpen={seasonSettingsModal}\n        toggleModalOpen={setSeasonSettingsModal}\n      />\n      <AddPlayModal\n        modalOpen={newPlayModal}\n        toggleModalOpen={setNewPlayModal}\n      />\n      <EditPlayModal\n        modalOpen={editPlayModal}\n        toggleModalOpen={setEditPlayModal}\n      />\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SeasonViewPage);\n","import React from \"react\";\nimport {\n  withStyles,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Tooltip,\n  Paper,\n} from \"@material-ui/core\";\nimport _ from \"lodash\";\n\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nconst styles = (theme) => ({\n  personToCast: { marginBottom: theme.spacing() },\n});\n\nconst FreeToCast = ({ classes, ...props }) => {\n  return (\n    <div>\n      <Typography variant=\"h6\">Free to cast</Typography>\n      <List dense>\n        {_.times(5, (i) => {\n          return (\n            <Paper className={classes.personToCast}>\n              <ListItem>\n                <ListItemText\n                  primary={\"Joe Bloggs\"}\n                  secondary={\"Role - Play Name\"}\n                ></ListItemText>\n\n                <ListItemSecondaryAction>\n                  <Tooltip title=\"Cast\">\n                    <IconButton color=\"secondary\">\n                      <CheckIcon />\n                    </IconButton>\n                  </Tooltip>\n                </ListItemSecondaryAction>\n              </ListItem>\n            </Paper>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FreeToCast);\n","import React from \"react\";\nimport {\n  withStyles,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Tooltip,\n  Paper,\n} from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\n\nconst styles = (theme) => ({\n  personToCast: { marginBottom: theme.spacing() },\n});\n\nconst Deadlocks = ({ classes, ...props }) => {\n  return (\n    <div>\n      <Typography variant=\"h6\">Deadlocks</Typography>\n      <List dense>\n        {_.times(5, (i) => {\n          return (\n            <Paper className={classes.personToCast}>\n              <ListItem>\n                <ListItemText>Joe Bloggs</ListItemText>\n                <ListItemText primary={\"Role\"} secondary={\"Week 3\"} />\n                <ListItemText primary={\"Role\"} secondary={\"Week 4\"} />\n\n                <ListItemSecondaryAction>\n                  <Tooltip title=\"Needs Resolving!\">\n                    <IconButton disabled>\n                      <ErrorOutlineIcon />\n                    </IconButton>\n                  </Tooltip>\n                </ListItemSecondaryAction>\n              </ListItem>\n            </Paper>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Deadlocks);\n","import React from \"react\";\nimport {\n  withStyles,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Tooltip,\n  Paper,\n} from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nconst styles = (theme) => ({\n  personToCast: { marginBottom: theme.spacing() },\n});\n\nconst Sharing = ({ classes, ...props }) => {\n  return (\n    <div>\n      <Typography variant=\"h6\">Sharing cast members</Typography>\n      <List dense>\n        {_.times(5, (i) => {\n          return (\n            <Paper className={classes.personToCast}>\n              <ListItem>\n                <ListItemText>Joe Bloggs</ListItemText>\n                <ListItemText primary={\"Role\"} secondary={\"Week 3\"} />\n                <ListItemText primary={\"Role\"} secondary={\"Week 4\"} />\n\n                <ListItemSecondaryAction>\n                  <Tooltip title=\"Cast in both shows\">\n                    <IconButton color=\"secondary\">\n                      <CheckIcon />\n                    </IconButton>\n                  </Tooltip>\n                </ListItemSecondaryAction>\n              </ListItem>\n            </Paper>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Sharing);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport FreeToCast from \"../components/FreeToCast\";\nimport Deadlocks from \"../components/Deadlocks\";\nimport Sharing from \"../components/Sharing\";\n\nconst styles = (theme) => ({});\n\nconst CastingMeetingPage = ({ classes, ...props }) => {\n  return (\n    <div>\n      <FreeToCast />\n      <Deadlocks />\n      <Sharing />\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CastingMeetingPage);\n","import React, { useState } from \"react\";\nimport { Snackbar, withStyles } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nconst styles = (theme) => ({\n  snackbarStyling: {\n    width: 200,\n  },\n});\n\nconst Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nconst SnackBarHolder = ({ classes, ...props }) => {\n  const [snackBar, setSnackBar] = useState(true);\n  return (\n    <div>\n      <Snackbar\n        autoHideDuration={5000}\n        className={classes.snackbarStyling}\n        open={snackBar}\n        onClose={() => setSnackBar(false)}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n      >\n        <Alert style={{ width: \"100%\" }} severity=\"error\">\n          Failed to cast\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SnackBarHolder);\n","import React from \"react\";\nimport {\n  withStyles,\n  TextField,\n  Button,\n  Typography,\n  Divider,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport ModalContainer from \"../components/ModalContainer\";\n\nconst styles = (theme) => ({\n  divider: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  seasonOptions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n});\n\nconst NewSeasonModal = ({ classes, ...props }) => {\n  return (\n    <div>\n      <ModalContainer\n        isOpen={props.modalOpen}\n        toggleModal={props.toggleModalOpen}\n        modalTitle=\"New Season\"\n      >\n        <TextField label=\"Name\" variant=\"outlined\" fullWidth />\n        <div className={classes.seasonOptions}>\n          <Typography variant=\"subtitle\" color=\"primary\">\n            Season Options\n          </Typography>\n          <Divider className={classes.divider} />\n          <FormGroup>\n            <FormControlLabel\n              control={<Checkbox checked name=\"checkedB\" color=\"primary\" />}\n              label=\"Big Rona Casting Rules\"\n            />\n          </FormGroup>\n        </div>\n        <Button color=\"secondary\" variant=\"contained\" fullWidth>\n          Create Season\n        </Button>\n      </ModalContainer>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(NewSeasonModal);\n","import React, { useState } from \"react\";\nimport {\n  withStyles,\n  Typography,\n  Paper,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Divider,\n  Button,\n  Chip,\n} from \"@material-ui/core\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport NewSeasonModal from \"../modals/NewSeasonModal\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = (theme) => ({\n  seasonList: { marginTop: theme.spacing() },\n  playItem: {\n    marginBottom: theme.spacing(),\n  },\n  addPlayButton: {\n    marginRight: theme.spacing(),\n  },\n  typeChip: {\n    marginLeft: theme.spacing(),\n  },\n});\n\nconst SeasonsPage = ({ classes, ...props }) => {\n  const [newSeasonModal, setNewSeasonModal] = useState(false);\n  return (\n    <div>\n      <List>\n        <ListItem>\n          <ListItemText\n            primary={<Typography variant=\"h6\">Seasons</Typography>}\n          />\n          <ListItemSecondaryAction>\n            <Button\n              className={classes.addPlayButton}\n              color=\"secondary\"\n              variant=\"contained\"\n              startIcon={<AddCircleIcon />}\n              onClick={() => setNewSeasonModal(true)}\n            >\n              New Season\n            </Button>\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n\n      <List className={classes.seasonList}>\n        <Paper>\n          <ListItem ho className={classes.playItem}>\n            <ListItemText\n              primary={\n                <div>\n                  <Typography style={{ display: \"inline-block\" }}>\n                    Autumn Term 2020\n                  </Typography>\n                </div>\n              }\n            />\n            <ListItemSecondaryAction>\n              <IconButton component={Link} to=\"/seasons/1\">\n                <ArrowForwardIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </Paper>\n      </List>\n\n      <NewSeasonModal\n        modalOpen={newSeasonModal}\n        toggleModalOpen={setNewSeasonModal}\n      />\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SeasonsPage);\n","import React from \"react\";\n\nconst SettingsPage = () => {\n  return <div>Generic settings/debugs</div>;\n};\n\nexport default SettingsPage;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  createMuiTheme,\n  MuiThemeProvider,\n  CssBaseline,\n  withStyles,\n  Toolbar,\n} from \"@material-ui/core\";\n\nimport TopBar from \"./components/TopBar\";\nimport SideDrawer from \"./components/SideDrawer\";\n\nimport SeasonViewPage from \"./pages/SeasonViewPage\";\nimport CastingMeetingPage from \"./pages/CastingMeetingPage\";\nimport SnackBarHolder from \"./components/SnackBarHolder\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport SeasonsPage from \"./pages/SeasonsPage\";\nimport SettingsPage from \"./pages/SettingsPage\";\nconst styles = (theme) => ({\n  root: { display: \"flex\" },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n});\n\nfunction App({ classes, ...props }) {\n  const theme = createMuiTheme({\n    shadows: [\"none\"],\n    palette: {\n      primary: {\n        light: \"#bc564f\",\n        main: \"#AC2C23\",\n        dark: \"#781e18\",\n      },\n      secondary: {\n        light: \"#5965b2\",\n        main: \"#303f9f\",\n        dark: \"#212c6f\",\n      },\n    },\n    overrides: {\n      MuiCssBaseline: {\n        \"@global\": {\n          body: {\n            backgroundColor: \"#ebebeb\",\n          },\n        },\n      },\n    },\n  });\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <BrowserRouter>\n        <div className={classes.root}>\n          <TopBar />\n          <SideDrawer />\n          <div className={classes.content}>\n            <Toolbar />\n            <Switch>\n              <Route exact path=\"/seasons\">\n                <SeasonsPage />\n              </Route>\n              <Route path=\"/seasons/:id\">\n                <SeasonViewPage />\n              </Route>\n              <Route path=\"/settings\">\n                <SettingsPage />\n              </Route>\n              <Route path=\"/casting/:id\">\n                <CastingMeetingPage />\n              </Route>\n              <Route path=\"/\">\n                <CastingMeetingPage />\n              </Route>\n            </Switch>\n            <SnackBarHolder />\n          </div>\n        </div>\n      </BrowserRouter>\n    </MuiThemeProvider>\n  );\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}